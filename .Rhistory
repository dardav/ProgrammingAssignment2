help.start()
help(find)
q()
install.packages("KernSmooth")
library(KernSmooth)
quit
cd DataScientist
cd ~/DataScientist
cd ~\DataScientist
cd ~DataScientist
exit
install.packages("swirl")
library(swirl)
swirl()
swirl()
5+7
x<-5+7
swirl()
library(swirl)
swirl()
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mysqrt<-sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+100
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dur()
dir()
?list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exist()
file.exist(mytest.R)
file.exists(mytest.R)
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
help read.csv()
? read.csv()
cd C:\Users\Darbinyan\Documents\DataScientist\rprogr_quiz1
cd C:/Users/Darbinyan/Documents/DataScientist/rprogr_quiz1
cd "C:/Users/Darbinyan/Documents/DataScientist/rprogr_quiz1"
cd("C:/Users/Darbinyan/Documents/DataScientist/rprogr_quiz1")
readcsv('hw1_data.csv')
read.csv('hw1_data.csv')
read.csv("hw1_data.csv")
read.csv('hw1_data.csv')
read.csv("hw1_data.csv")
read.csv('hw1_data.csv')
read.csv(file='hw1_data.csv')
read.csv(file="hw1_data.csv")
read.csv(file="C:\Users\Darbinyan\Documents\DataScientist\rprogr_quiz1")
read.csv(file="C:/Users/Darbinyan/Documents/DataScientist/rprogr_quiz1")
read.csv(file="C:/Users/Darbinyan/Documents/DataScientist/rprogr_quiz1/hw1_data.csv)
read.csv(file="C:/Users/Darbinyan/Documents/DataScientist/rprogr_quiz1/hw1_data.csv")
x<-read.csv(file="C:/Users/Darbinyan/Documents/DataScientist/rprogr_quiz1/hw1_data.csv")
nrow(x)
header(x)
headers(x)
names(x)
x(1:2,)
x[1:2,]
y<-x[nrow(x)-1:nrow(x),]
y
y<-x[152-153,]
y
y<-x[152:153,]
y
y<-x[47,]
y$Oxone
y
y$Ozone
y<-x(is.na(x$Ozone))
y<-x[is.na(x$Ozone)]
y<-x[is.na(\$Ozone)]
y<-x[is.na($Ozone)]
y<-is.na(x$Ozone)
length(is.true(y))
length(true(y))
length(x$Ozone(!y))
length(x$Ozone[!y])
length(x$Ozone[y])
mean(x$Ozone[!y])
y1<-x$Ozone>31
y2<-x$Temp>90
y3<-complete.cases(y1,y2)
z<-mean(x$Solar.R(!y3))
z<-mean(x$Solar.R[!y3])
y3<-complete.cases(x$Ozone>31,x$Solar.R>90)
y3<-x$Solar.R[x$Temp[x$Ozone>31]>90]
y3[!is.na(y3)]
mean(y3)
mean(y3[!is.na(y3)])
y3<-x$Solar.R[x$Ozone>3 and x$Temp>90]
y3<-x$Solar.R[x$Ozone>31 & x$Temp>90]
mean(y3[!is.na(y3)])
mean(x$Temp[x$Month==6])
max(x$Ozone[x$Month==5])
max(x$Ozone[!is.na(x$Ozone[x$Month==5])])
y<-x$Ozone[x$Month==5]
y
max(y,na.rm=TRUE)
exit
setwd("~/DataScientist/ProgrammingAssignment2")
test<-matrix(rnorm(25),5,5)
source("cachematrix.R")
testf<-makeCacheMatrix(test)
cacheSolve(testf)
cacheSolve(testf)
test1<-matrix(rnorm(25),5,5)
testf1<-makeCacheMatrix(test1)
cacheSolve(testf1)
cacheSolve(testf)
cacheSolve(testf1)
